statements  : NEWLINE* statement (NEWLINE+ statement)* NEWLINE*'

statement : KEYWORD:RETURN expr?
          : KEYWORD:CONTINUE
          : KEYWORD:BREAK
          : expr


expr : KEWYOWRD:VAR IDENTIFIER EQ expr
     : copm-expr ((KEYWORD:AND|KEYWORD:OR) comp-expr)* 
     
comp-expr : NOT comp-expr
          : arith-expr ((EE|LT|GT|LTE|GTE) arith-expr)* 

arith-expr : term ((PLUS|MINUS))*

term : factor ((MUL|DIV) FACTOR)*

factor : (PLUS|MINUS) factor
        : power

power : call (POW factor)* 

call  : atom (LPAREN (expr (COMMA expr)*)? RPAREN)*
        

atom : INT|FLOAT|STRING|IDENTIFIER
     : LPAREN expr RPAREN
     : list-expr
     : if-expr
     : for-expr
     : while-expr
     : func-def

list-expr : LSQUARE (expr (COMMA expr)*)? RSQUARE

if-expr : KEYWORD:IF expr KEYWORD:THEN 
        : (statement if-expr-b|if-expr-c?)
        : (NEWLINE statements KEYWORD: END exprif-expr-b|if-expr-c)

if-expr-b : KEYWORD:ELIF expr KEYWORD:THEN 
        : (statement if-expr-b|if-expr-c?)
        : (NEWLINE statements KEYWORD: END exprif-expr-b|if-expr-c)

if-expr-c : KEYWORD:ELSE
            statement
          | (NEWLINE statements KEYWORD: END)


for-expr : KEYWORD:FOR IDENTIFIER EQ expr KEYWORD:TO expr
          (KEYWORD:STEP expr)? KEYWORD:THEN expr
          statement
          | (NEWLINE statements KEYWORD: END)

while-expr : KEYWORD:WHILE expr KEYWORD:THEN expr
             statement
            | (NEWLINE statements KEYWORD: END)

func-def : KEYWORD:FUN IDENTIFIER?
         LPAREN (IDENTIFIER (COMMA IDENTIFIER)*)? RPAREN ARROW expr
         (ARROW expr)
        | (NEWLINE statements KEYWORD: END)



# = comment
to run a file, run the shell.py file with 'python shell.py', and then type 'run <filename>' in the shell.

